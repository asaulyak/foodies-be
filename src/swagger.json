{
  "openapi": "3.0.0",
  "info": {
    "title": "API",
    "version": "1.0.0",
    "description": "API for managing users, recipes, health checks, categories, areas, and ingredients."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local server"
    }
  ],
  "tags": [
    {
      "name": "Users",
      "description": "Operations related to users."
    },
    {
      "name": "Health",
      "description": "Health check endpoints."
    },
    {
      "name": "Recipes",
      "description": "Operations related to recipes."
    },
    {
      "name": "Categories",
      "description": "Operations related to recipe categories."
    },
    {
      "name": "Areas",
      "description": "Operations related to recipe areas."
    },
    {
      "name": "Ingredients",
      "description": "Operations related to recipe ingredients."
    }
  ],
  "paths": {
    "/api/users/signup": {
      "post": {
        "tags": ["Users"],
        "summary": "Register a new user",
        "description": "Creates a new user with the provided details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "The user's email address."
                  },
                  "password": {
                    "type": "string",
                    "description": "The user's password."
                  },
                  "name": {
                    "type": "string",
                    "description": "The user's name."
                  }
                },
                "required": ["email", "password", "name"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "format": "email"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Email address already in use."
          },
          "400": {
            "description": "Invalid input data."
          }
        }
      }
    },
    "/api/users/signin": {
      "post": {
        "tags": ["Users"],
        "summary": "User login",
        "description": "Authenticates the user and returns a token.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string"
                  }
                },
                "required": ["email", "password"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful login.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "token": {
                      "type": "string",
                      "description": "Access token."
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string"
                        },
                        "name": {
                          "type": "string"
                        },
                        "email": {
                          "type": "string",
                          "format": "email"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password."
          }
        }
      }
    },
    "/api/users/current": {
      "get": {
        "tags": ["Users"],
        "summary": "Get current user",
        "description": "Returns the information of the currently logged-in user.",
        "responses": {
          "200": {
            "description": "Current user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "email": {
                      "type": "string",
                      "format": "email"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error."
          }
        }
      }
    },
    "/api/users/followers": {
      "get": {
        "tags": ["Users"],
        "summary": "Get list of followers",
        "description": "Returns a list of users who follow the current user.",
        "responses": {
          "200": {
            "description": "List of followers.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "followers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "recipes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "thumb": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "totalFollowers": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/following": {
      "get": {
        "tags": ["Users"],
        "summary": "Get list of following",
        "description": "Returns a list of users that the current user is following.",
        "responses": {
          "200": {
            "description": "List of following users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "following": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "recipes": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string"
                                },
                                "thumb": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "totalFollowings": {
                      "type": "integer"
                    },
                    "page": {
                      "type": "integer"
                    },
                    "limit": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users/recipes": {
      "get": {
        "tags": ["Users"],
        "summary": "Get user recipes",
        "description": "Returns recipes created by the current user.",
        "responses": {
          "200": {
            "description": "List of user recipes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "thumb": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/health/liveness": {
      "get": {
        "tags": ["Health"],
        "summary": "Liveness check",
        "description": "Returns 'OK' to verify that the server is up and running.",
        "responses": {
          "200": {
            "description": "Server is running.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          }
        }
      }
    },
    "/api/health/readyness": {
      "get": {
        "tags": ["Health"],
        "summary": "Readiness check",
        "description": "Returns 'OK' if the server and database are ready to handle requests.",
        "responses": {
          "200": {
            "description": "Server and database are ready.",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "example": "OK"
                }
              }
            }
          },
          "500": {
            "description": "Error during readiness check."
          }
        }
      }
    },
    "/api/recipes/popular": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get popular recipes",
        "description": "Returns a list of popular recipes based on user favorites.",
        "responses": {
          "200": {
            "description": "List of popular recipes.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "thumb": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/recipes/{id}": {
      "get": {
        "tags": ["Recipes"],
        "summary": "Get recipe by ID",
        "description": "Returns a recipe by the specified ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recipe found.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "instructions": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "thumb": {
                      "type": "string"
                    },
                    "time": {
                      "type": "string"
                    },
                    "categoryId": {
                      "type": "string"
                    },
                    "areaId": {
                      "type": "string"
                    },
                    "ownerId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Recipe not found."
          }
        }
      },
      "delete": {
        "tags": ["Recipes"],
        "summary": "Delete recipe",
        "description": "Deletes a recipe by the specified ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Recipe successfully deleted."
          },
          "404": {
            "description": "Recipe not found."
          }
        }
      }
    },
    "/api/recipes": {
      "post": {
        "tags": ["Recipes"],
        "summary": "Create a new recipe",
        "description": "Creates a new recipe with the provided details.",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string"
                  },
                  "instructions": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "thumb": {
                    "type": "string"
                  },
                  "time": {
                    "type": "string"
                  },
                  "categoryId": {
                    "type": "string"
                  },
                  "areaId": {
                    "type": "string"
                  }
                },
                "required": ["title", "instructions", "description", "thumb", "time", "categoryId", "areaId"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Recipe successfully created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    },
                    "instructions": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "thumb": {
                      "type": "string"
                    },
                    "time": {
                      "type": "string"
                    },
                    "categoryId": {
                      "type": "string"
                    },
                    "areaId": {
                      "type": "string"
                    },
                    "ownerId": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input data."
          }
        }
      }
    },
    "/api/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get list of categories",
        "description": "Returns a list of recipe categories.",
        "responses": {
          "200": {
            "description": "List of categories.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/areas": {
      "get": {
        "tags": ["Areas"],
        "summary": "Get list of areas",
        "description": "Returns a list of recipe areas.",
        "responses": {
          "200": {
            "description": "List of areas.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/ingredients": {
      "get": {
        "tags": ["Ingredients"],
        "summary": "Get list of ingredients",
        "description": "Returns a list of recipe ingredients.",
        "responses": {
          "200": {
            "description": "List of ingredients.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}
